{
  "name": "zenOS AI Post Template Selector",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "GET",
        "path": "template-selector",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook - Template Selector",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "zenOS-templates"
    },
    {
      "parameters": {
        "url": "https://raw.githubusercontent.com/k-dot-greyz/zenOS/main/ai_post_templates.yaml",
        "responseFormat": "string",
        "options": {
          "timeout": 10000,
          "allowUnauthorizedCerts": false,
          "headers": {
            "User-Agent": "zenOS-n8n/1.0",
            "Cache-Control": "no-cache"
          },
          "queryParametersUi": {
            "parameter": [
              { "name": "_", "value": "={{ Date.now() }}" }
            ]
          }
        }
      },
      "id": "fetch-templates",
      "name": "Fetch Templates from GitHub",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [460, 300]
    },
    {
      "parameters": {
        "jsCode": "// Parse YAML and generate beautiful web UI\n// NOTE: Requires NODE_FUNCTION_ALLOW_EXTERNAL=js-yaml and NODE_FUNCTION_EXTERNAL_MODULES configured\nconst yaml = require('js-yaml');\n\n// Fix: HTTP Request node returns body, not data\nconst templateData = yaml.load($input.first().json.body);\nconst templates = templateData.ai_post_templates;\n\n// Validate templates exist\nif (!templates || typeof templates !== 'object') {\n  return [{ json: { html: '<!DOCTYPE html><html><head><meta charset=\"utf-8\"><title>Error</title></head><body><h1>Templates Not Found</h1><p>ai_post_templates not found in YAML or invalid format.</p></body></html>' } }];\n}\n\n// XSS protection: HTML escape function\nconst esc = (s = '') => String(s)\n  .replace(/&/g, '&amp;')\n  .replace(/</g, '&lt;')\n  .replace(/>/g, '&gt;')\n  .replace(/\"/g, '&quot;')\n  .replace(/'/g, '&#39;');\n\nconst html = `\n<!DOCTYPE html>\n<html>\n<head>\n    <title>zenOS AI Post Template Selector</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <style>\n        * { margin: 0; padding: 0; box-sizing: border-box; }\n        body {\n            font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, sans-serif;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            min-height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 20px;\n        }\n        .container {\n            background: rgba(255, 255, 255, 0.95);\n            backdrop-filter: blur(10px);\n            border-radius: 20px;\n            padding: 40px;\n            box-shadow: 0 20px 40px rgba(0,0,0,0.1);\n            max-width: 900px;\n            width: 100%;\n        }\n        .header {\n            text-align: center;\n            margin-bottom: 40px;\n        }\n        .header h1 {\n            color: #2d3748;\n            font-size: 2.5em;\n            font-weight: 700;\n            margin-bottom: 10px;\n        }\n        .header p {\n            color: #718096;\n            font-size: 1.2em;\n        }\n        .templates {\n            display: grid;\n            gap: 25px;\n            margin-bottom: 40px;\n        }\n        .template-card {\n            background: #f7fafc;\n            border: 2px solid #e2e8f0;\n            border-radius: 15px;\n            padding: 30px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            position: relative;\n        }\n        .template-card:hover {\n            border-color: #667eea;\n            transform: translateY(-2px);\n            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.15);\n        }\n        .template-card.selected {\n            border-color: #667eea;\n            background: linear-gradient(135deg, #667eea10, #764ba210);\n        }\n        .template-title {\n            font-size: 1.5em;\n            font-weight: 600;\n            color: #2d3748;\n            margin-bottom: 8px;\n        }\n        .template-vibe {\n            font-size: 1em;\n            color: #667eea;\n            font-weight: 500;\n            margin-bottom: 20px;\n        }\n        .template-text {\n            color: #4a5568;\n            line-height: 1.6;\n            font-style: italic;\n            background: #ffffff;\n            padding: 20px;\n            border-radius: 10px;\n            border-left: 4px solid #667eea;\n        }\n        .copy-btn {\n            background: linear-gradient(135deg, #667eea, #764ba2);\n            color: white;\n            border: none;\n            padding: 18px 40px;\n            border-radius: 50px;\n            font-size: 1.2em;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            display: block;\n            margin: 0 auto;\n            min-width: 250px;\n        }\n        .copy-btn:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);\n        }\n        .copy-btn:disabled {\n            opacity: 0.5;\n            cursor: not-allowed;\n            background: #a0aec0;\n        }\n        .status {\n            text-align: center;\n            margin-top: 25px;\n            font-weight: 600;\n            font-size: 1.1em;\n        }\n        .success { color: #38a169; }\n        .error { color: #e53e3e; }\n        .footer {\n            text-align: center;\n            margin-top: 30px;\n            color: #718096;\n            font-style: italic;\n        }\n        @media (max-width: 768px) {\n            .container { padding: 25px; }\n            .header h1 { font-size: 2em; }\n            .template-card { padding: 20px; }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>üß† zenOS AI Post Templates</h1>\n            <p>Choose your persona, copy your template, dominate social media</p>\n        </div>\n        \n        <div class=\"templates\">\n            ${Object.entries(templates).map(([key, template]) => `\n                <div class=\"template-card\" onclick=\"selectTemplate('${esc(key)}')\" id=\"card-${esc(key)}\">\n                    <div class=\"template-title\">${esc(template.title)}</div>\n                    <div class=\"template-vibe\">üìù ${esc(template.vibe)}</div>\n                    <div class=\"template-text\">${esc(template.template)}</div>\n                </div>\n            `).join('')}\n        </div>\n        \n        <button class=\"copy-btn\" onclick=\"copyToClipboard()\" id=\"copyBtn\" disabled>\n            Select a Template to Copy\n        </button>\n        \n        <div id=\"status\" class=\"status\"></div>\n        \n        <div class=\"footer\">\n            <p>Part of the zenOS ecosystem - where productivity meets personality ‚ú®</p>\n        </div>\n    </div>\n    \n    <script>\n        // Safe JSON embedding (prevent script injection)\n        const templates = ${JSON.stringify(templates).replace(/</g, '\\u003c')};\n        let selectedTemplate = null;\n        let selectedKey = null;\n        \n        function selectTemplate(key) {\n            document.querySelectorAll('.template-card').forEach(card => {\n                card.classList.remove('selected');\n            });\n            document.getElementById('card-' + key).classList.add('selected');\n            selectedTemplate = templates[key].template;\n            selectedKey = key;\n            document.getElementById('copyBtn').disabled = false;\n            document.getElementById('copyBtn').textContent = 'Copy \"' + templates[key].title + '\" to Clipboard';\n        }\n        \n        async function copyToClipboard() {\n            if (!selectedTemplate) return;\n            \n            try {\n                if (navigator.clipboard && window.isSecureContext) {\n                    await navigator.clipboard.writeText(selectedTemplate);\n                    showStatus('‚úÖ Template copied to clipboard! Ready to post and dominate.', 'success');\n                } else {\n                    // Fallback for older browsers or insecure contexts\n                    const textArea = document.createElement('textarea');\n                    textArea.value = selectedTemplate;\n                    textArea.style.position = 'fixed';\n                    textArea.style.left = '-999999px';\n                    textArea.style.top = '-999999px';\n                    document.body.appendChild(textArea);\n                    textArea.focus();\n                    textArea.select();\n                    document.execCommand('copy');\n                    document.body.removeChild(textArea);\n                    showStatus('‚úÖ Template copied to clipboard! Ready to post and dominate.', 'success');\n                }\n                \n                // Log the successful copy\n                console.log('zenOS Template copied:', selectedKey, new Date().toISOString());\n                \n            } catch (err) {\n                console.error('Copy failed:', err);\n                showStatus('‚ùå Copy failed. Please manually copy the selected template text.', 'error');\n            }\n        }\n        \n        function showStatus(message, type) {\n            const status = document.getElementById('status');\n            status.textContent = message;\n            status.className = 'status ' + type;\n            setTimeout(() => {\n                status.textContent = '';\n                status.className = 'status';\n            }, 4000);\n        }\n        \n        // Auto-select first template for better UX\n        window.onload = function() {\n            const firstKey = Object.keys(templates)[0];\n            if (firstKey) {\n                selectTemplate(firstKey);\n            }\n        };\n    </script>\n</body>\n</html>\n`;\n\nreturn [{ json: { html: html, templates: templates } }];"
      },
      "id": "generate-ui",
      "name": "Generate Beautiful Web UI",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "text/html; charset=utf-8"
              },
              {
                "name": "Cache-Control",
                "value": "no-cache, no-store, must-revalidate"
              },
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Referrer-Policy",
                "value": "no-referrer"
              }
            ]
          }
        }
      },
      "id": "respond",
      "name": "Respond with UI",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 300]
    }
  ],
  "connections": {
    "Webhook - Template Selector": {
      "main": [
        [
          {
            "node": "Fetch Templates from GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Templates from GitHub": {
      "main": [
        [
          {
            "node": "Generate Beautiful Web UI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Beautiful Web UI": {
      "main": [
        [
          {
            "node": "Respond with UI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {},
  "tags": ["zenOS", "templates", "automation"],
  "triggerCount": 0,
  "updatedAt": "2025-09-29T03:22:00.000Z",
  "versionId": "1.0.0"
}